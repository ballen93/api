openapi: 3.0.0
servers:
  - url: https://{region}.api.zuus.io/{accountId}/
    variables:
      region:
        default: au
        enum:
          - au
          - us
      accountId:
        default: 01b9e817b6024de2950148bdab6a63c9
        description: Account Id assigned by ZUUS

info:
  title: ZUUS
  description: >
    Welcome to the ZUUS API. Once you have a ZUUS authorization key, you can use
    this API to access information about employees, locations, jobs and shifts
    (scheduled, timesheets and actual). Additionally you can send in 'Point of
    Sales' information.


    # Introduction


  version: 1.0.0

  contact:
    email: api@zuusworkforce.com

  x-logo:
    url: logo.png

tags:
  - name: Echo
    description: Example echo operations
  - name: User
    description: Operations about user

paths:
  /employees/:
    get:
      tags:
        - Employees
      summary: Get a list of all employees
      responses:
        '200':
          description: Successfully retrieved list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/employee'
    post:
      tags:
        - Employees
      summary: Create one or more employees
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/employee'
      responses:
        '201':
          description: Successfull creation of supplied employees
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
                  example: '566166db-6402-4d0f-88ed-259784aaf7dd'
  /employees/{id}/:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
        description: The employee id
        example: '566166db-6402-4d0f-88ed-259784aaf7dd'
    get:
      tags:
        - Employees
      summary: Get an individual employees details
      responses:
        '200':
          description: Successfully got employee details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employee'
        '404':
          description: That employee was not found
        '5XX':
          description: Unexpected Error
    put:
      tags:
        - Employees
      summary: Update an individual employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employee'
      responses:
        '200':
          description: Successfully updated employee details
                
components:
  schemas:
    timeperiod:
      type: object
      properties:
        start:
          type: string
          format: date
        finish:
          type: string
          format: date
      required:
        - start
        
    entityperiod:
      type: object
      properties:
        id:
          type: string
          format: uuid
        start:
          type: string
          format: date
        finish:
          type: string
          format: date
      required:
        - id
        
    employee:
      type: object
      properties:
        id:
          type: string
          format: uuid
        first_name:
          type: string
        last_name:
          type: string
        manager:
          type: boolean
        email:
          type: string
        dob:
          type: string
          format: date
        pin:
          type: string
        employment:
          $ref: '#/components/schemas/timeperiod'
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/entityperiod'
        locations:
          type: array
          items:
            $ref: '#/components/schemas/entityperiod'