openapi: 3.0.0
servers:
  - url: https://{region}.api.zuus.io/{accountId}/
    variables:
      region:
        default: au
        enum:
          - au
          - us
      accountId:
        default: 01b9e817b6024de2950148bdab6a63c9
        description: Account Id assigned by ZUUS

info:
  title: ZUUS (draft)
  description: >
    Welcome to the ZUUS API. Once you have a ZUUS authorization key, you can use
    this API to access information about employees, locations, jobs and shifts
    (scheduled, timesheets and actual). Additionally you can send in 'Point of
    Sales' information.

  version: 1.0.0

  contact:
    email: api@zuusworkforce.com

  x-logo:
    url: logo.png

tags:
  - name: Employees
    description: Operations about employees
  - name: Jobs
    description: Operations on jobs
  - name: Locations
    description: Locations are physical areas that require staff to be stationed.
  - name: Scheduled Shifts
    description: These are the times that are planned for staff to be at a location
  - name: Timesheet Shifts
    description: These are the recorded times that staff occupied a location.
  - name: Actual Shifts
    description: These are the times that have been approved and will be used in payroll.
  - name: POS
    description: Sending Point of Sales data
    
security:
  - BearerAuth: []
  - OAuth2:
    - read
    - write

paths:
  /employees/:
    get:
      tags:
        - Employees
      summary: Get a list of all employees
      responses:
        '200':
          description: Successfully retrieved a list of all employees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/employee'
    post:
      tags:
        - Employees
      summary: Create one or more employees
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/employee'
      responses:
        '201':
          description: Successful creation of supplied employees
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
                  example: '566166db-6402-4d0f-88ed-259784aaf7dd'
  /employees/{emp id}/:
    parameters:
      - in: path
        name: emp id
        required: true
        schema:
          type: string
          format: uuid
        description: The employee id
        example: '566166db-6402-4d0f-88ed-259784aaf7dd'
    get:
      tags:
        - Employees
      summary: Get an individual employees details
      responses:
        '200':
          description: Successfully got employee details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employee'
        '404':
          description: That employee was not found
        '5XX':
          description: Unexpected Error
    put:
      tags:
        - Employees
      summary: Update an individual employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employee'
      responses:
        '200':
          description: Successfully updated employee details
          
  /jobs/:
    get:
      tags:
        - Jobs
      summary: Get a list of all jobs
      responses:
        '200':
          description: Successfully retrieved a list of all jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/job'
    post:
      tags:
        - Jobs
      summary: Create one or more jobs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/job'
      responses:
        '201':
          description: Successful creation of jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
                  example: 'baf47dc1-ec02-4782-a855-de3c48ff4123'
  /jobs/{job id}/:
    parameters:
      - in: path
        name: job id
        required: true
        schema:
          type: string
          format: uuid
        description: The job id
        example: 'baf47dc1-ec02-4782-a855-de3c48ff4123'
    get:
      tags:
        - Jobs
      summary: Get an individual job details
      responses:
        '200':
          description: Successfully got the job's details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/job'
        '404':
          description: That job was not found
        '5XX':
          description: Unexpected Error
    put:
      tags:
        - Jobs
      summary: Update a job
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/job'
      responses:
        '200':
          description: Successfully update job details
          
  /locations/:
    get:
      tags:
        - Locations
      summary: Get a list of all locations
      responses:
        '200':
          description: Successfully retrieved a list of all locations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/location'
    post:
      tags:
        - Locations
      summary: Create one or more locations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/location'
      responses:
        '201':
          description: Successful creation of locations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: uuid
                  example: '552334aa-88aa-41fa-a54f-4f6fddd3a35d'
  /locations/{loc id}/:
    parameters:
      - in: path
        name: loc id
        required: true
        schema:
          type: string
          format: uuid
        description: The location id
        example: '552334aa-88aa-41fa-a54f-4f6fddd3a35d'
    get:
      tags:
        - Locations
      summary: Get an individual location
      responses:
        '200':
          description: Successfully got the location's details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/location'
        '404':
          description: That location was not found
        '5XX':
          description: Unexpected Error
    put:
      tags:
        - Locations
      summary: Update a location
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/location'
      responses:
        '200':
          description: Successfully updated the location
  /locations/{loc id}/scheduled/:
    parameters:
      - in: path
        name: loc id
        required: true
        schema:
          type: string
          format: uuid
        description: The location id
        example: '552334aa-88aa-41fa-a54f-4f6fddd3a35d'
    get:
      tags:
        - Scheduled Shifts
      summary: Get scheduled shifts for a location
      parameters:
        - in: query
          name: start
          schema:
            type: string
            format: date
        - in: query
          name: finish
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successfully retrieved a list of all the scheduled shifts for the period
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/shift'
  /locations/{loc id}/timesheets/:   
    parameters:
      - in: path
        name: loc id
        required: true
        schema:
          type: string
          format: uuid
        description: The location id
        example: '552334aa-88aa-41fa-a54f-4f6fddd3a35d'
    get:
      tags:
        - Timesheet Shifts
      summary: Get timesheet shifts for a location
      parameters:
        - in: query
          name: start
          schema:
            type: string
            format: date
        - in: query
          name: finish
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successfully retrieved a list of all the timesheet shifts for the period
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/timesheet'
    post:
      tags:
        - Timesheet Shifts
      summary: Create an individual timesheet
      description: Once a timesheet attribute has been added (start, break, segment) it cannot be modified
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timesheet'
      responses:
        '201':
          description: Successful creation of a timesheet
          content:
            application/json:
              schema:
                type: string
                format: uuid
                example: 'e4a33c11-31e6-4668-ab31-83551dae7cb7'
        '409':
          description: Conflict
  /locations/{loc id}/timesheets/{tm id}/:
    parameters:
      - in: path
        name: loc id
        required: true
        schema:
          type: string
          format: uuid
        description: The location id
        example: '552334aa-88aa-41fa-a54f-4f6fddd3a35d'
      - in: path
        name: tm id
        required: true
        schema:
          type: string
          format: uuid
        description: The timesheet id
        example: 'e4a33c11-31e6-4668-ab31-83551dae7cb7'
    get:
      tags:
        - Timesheet Shifts
      summary: Get an individual timesheet
      responses:
        '200':
          description: Successfully got the timesheet details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/timesheet'
        '404':
          description: That timeshett was not found
        '5XX':
          description: Unexpected Error
    put:
      tags:
        - Timesheet Shifts
      summary: Update a timesheet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/timesheet'
      responses:
        '200':
          description: Successfully updated the timesheet
  /locations/{loc id}/actuals/:
    parameters:
      - in: path
        name: loc id
        required: true
        schema:
          type: string
          format: uuid
        description: The location id
        example: '552334aa-88aa-41fa-a54f-4f6fddd3a35d'
    get:
      tags:
        - Actual Shifts
      summary: Get actual shifts for a location
      parameters:
        - in: query
          name: start
          schema:
            type: string
            format: date
        - in: query
          name: finish
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successfully retrieved a list of all the actual shifts for the period
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/actual'
  /locations/{loc id}/pos/:
    parameters:
      - in: path
        name: loc id
        required: true
        schema:
          type: string
          format: uuid
        description: The location id
        example: '552334aa-88aa-41fa-a54f-4f6fddd3a35d'
        
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://go.zuusworkforce.com/auth/application
          tokenUrl: https://go.zuusworkforce.com/auth/token
          scopes:
            read: Grant read access
            write: Grant write access
  schemas:
    dateperiod:
      type: object
      properties:
        start:
          description: ISO 8601 Date
          type: string
          format: date
        finish:
          description: ISO 8601 Date
          type: string
          format: date
      required:
        - start
        
    entityperiod:
      type: object
      properties:
        id:
          type: string
          format: uuid
        start:
          description: ISO 8601 Date
          type: string
          format: date
        finish:
          description: ISO 8601 Date
          type: string
          format: date
      required:
        - id
        
    employee:
      type: object
      properties:
        id:
          type: string
          format: uuid
        first_name:
          type: string
        last_name:
          type: string
        manager:
          type: boolean
        email:
          type: string
        dob:
          type: string
          format: date
        pin:
          type: string
        employment:
          $ref: '#/components/schemas/dateperiod'
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/entityperiod'
        locations:
          type: array
          items:
            $ref: '#/components/schemas/entityperiod'
            
    job:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: Coffee drinker
        color:
          type: string
          example: #8CC63E
          description: HEX representation of color
          
    location:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: The coffee bar
        timezone:
          type: string
          example: 'America/New_York'
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/entityperiod'
            
    datetime:
      type: string
      format: datetime
      description: ISO 8601 Date time with timezone
      example: 2018-08-10 16:45+9:30
            
    break:
      type: object
      properties:
        start:
          $ref: '#/components/schemas/datetime'
        finish:
          $ref: '#/components/schemas/datetime'
        paid:
          type: boolean
          default: true
      required:
        - start
        
    segment:
      type: object
      properties:
        start:
          $ref: '#/components/schemas/datetime'
        finish:
          $ref: '#/components/schemas/datetime'
        job:
          type: string
          format: uuid
        notes:
          type: string
      required:
        - start
        
    shift:
      type: object
      properties:
        id:
          type: string
          format: uuid
        employee:
          type: string
          format: uuid
        location:
          type: string
          format: uuid
        start:
          $ref: '#/components/schemas/datetime'
        finish:
          $ref: '#/components/schemas/datetime'
        breaks:
          type: array
          items:
            $ref: '#/components/schemas/break'
        segments:
          type: array
          items:
            $ref: '#/components/schemas/segment'
        notes:
          type: string
      required:
        - employee
        - location
        - start
        
    timesheet:
      allOf:
        - $ref: '#/components/schemas/shift'
        - type: object
          properties:
            system:
              type: string
            exceptions:
              type: array
              items:
                type: object
                properties:
                  manager:
                    type: string
                    format: uuid
                  reason:
                    type: string
                  approvedAt:
                    $ref: '#/components/schemas/datetime'
            
    actual:
      allOf:
        - $ref: '#/components/schemas/shift'
        - type: object
          properties:
            approvedBy:
              type: string
              format: uuid
            approvedAt:
              $ref: '#/components/schemas/datetime'
              
    pos:
      type: object
      properties:
        start:
          $ref: '#/components/schemas/datetime'